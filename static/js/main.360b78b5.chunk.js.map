{"version":3,"sources":["utils/func.js","redux/sidebar/reducer.js","redux/sidebar/types.js","redux/notes/reducer.js","redux/notes/types.js","redux/music/reducer.js","redux/music/types.js","redux/analytics/reducer.js","redux/analytics/types.js","redux/login/reducer.js","redux/login/types.js","redux/index.js","serviceWorker.js","constants/text.js","pages/Analytics/Chart.js","pages/Analytics/connect.js","pages/Analytics/Analytics.js","constants/utils.js","pages/Musicians/Musicians.js","redux/notes/actions.js","pages/Notes/helpers.js","pages/Notes/connect.js","pages/Notes/components/Note/Note.js","pages/Notes/components/EditContainer/EditContainer.js","pages/Notes/Notes.js","redux/analytics/actions.js","axios.js","methods/api.js","pages/Music/helpers.js","pages/Music/connect.js","redux/music/actions.js","components/Header/Header.js","components/Sidebar/connect.js","redux/sidebar/actions.js","components/Sidebar/Sidebar.js","components/Player/Player.js","components/Card/Card.js","components/Avatar/Avatar.js","pages/Music/Music.js","pages/Login/helpers.js","redux/login/actions.js","pages/Login/connect.js","pages/Login/Login.js","hocs/withAuthorizationUser.js","connect.js","Navigation.js","App.js","index.js"],"names":["createCorrectDurationPart","part","String","length","time","date","Date","getMinutes","getSeconds","toDateString","slice","name","handleReducer","defaultState","state","action","handler","type","F","isOpen","localNotes","localStorage","getItem","initialState","notes","JSON","parse","payload","songs","favoriteSongs","artists","artistName","localUser","userName","combineReducers","sidebarReducer","notesReducer","musicReducer","analyticsReducer","loginReducer","Boolean","window","location","hostname","match","text","appName","musicHeadline","favoritesHeadline","modalApply","modalCancel","modalAdd","modalSave","buttonDelete","buttonChange","buttonSearch","buttonSignIn","buttonCancel","buttonPlaySong","placeholderForGenderSelect","placeholderForSearchMusic","placeholderForUserInput","placeholderForEmailInput","placeholderForPasswordInput","genderMale","genderFemale","imgAlt","xTitle","queriesTitle","playingTitle","closeFavorites","openFavorites","searchAnalytics","playAnalytics","Chart","data","yTitle","headline","className","height","width","xType","title","connect","createData","counterName","R","it","x","y","searchData","playData","showSearchChart","showPlayedChart","utils","sidebarItems","path","iconType","userTableColumns","types","musicians","age","gender","region","Musicians","history","makeCell","index","key","onClick","term","push","updateNote","updateNotes","mapDispatchToProps","addNote","note","dispatch","noteWithId","id","generateId","allNotes","setItem","stringify","deleteNote","getState","updateNoteById","newValue","value","onEdit","setState","onChange","target","onUpdate","props","this","containerType","buttonText","React","Component","EditContainer","isSameType","visible","currentNote","showModal","handleCancel","handleAdd","onCancel","footer","placeholder","TextArea","updateSearchCounter","artist","axios","axiosForMusic","Axios","create","baseURL","headers","Accept","responseType","api","getMusic","params","get","a","results","track","analyticsActions","searchCounter","countPlaying","playCounter","addSongToFav","song","favSongs","trackId","deleteFromFav","Header","logout","theme","toggleState","renderList","to","activeClassName","Player","progress","playedSeconds","changeProgress","played","url","play","onPlay","onStop","playing","fileConfig","forceAudio","onProgress","Math","round","style","Card","isFav","addToFavorite","deleteFromFavorite","item","artworkUrl100","trackName","collectionName","country","releaseDate","trackTimeMillis","previewUrl","Avatar","src","alt","entity","loading","isOpenFavorites","onSearch","getSongs","showFavorites","spinning","Search","enterButton","isFavorite","signIn","email","password","Password","withAuthorizationUser","user","removeItem","compose","exact","component","Analytics","Notes","Music","App","from","Navigation","Login","rootStore","createStore","store","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.360b78b5.chunk.js","sourcesContent":["const createCorrectDurationPart = (part) => (String(part).length > 1 ? part : `0${part}`);\r\n\r\nconst parseDuration = (time) => {\r\n  const date = new Date(time);\r\n  return `${createCorrectDurationPart(date.getMinutes())}:${createCorrectDurationPart(date.getSeconds())}`;\r\n};\r\n\r\nconst parseDateRelease = (date) => new Date(date).toDateString().slice(4);\r\n\r\nconst parseName = (name) => (name.length > 15 ? `${name.slice(0, 15)}...` : name);\r\n\r\nconst createReducer = (handleReducer, defaultState) => (state = defaultState, action) => {\r\n  const handler = handleReducer[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default {\r\n  parseDuration,\r\n  parseDateRelease,\r\n  createCorrectDurationPart,\r\n  parseName,\r\n  createReducer\r\n};\r\n","import { TOGGLE_STATE } from './types';\r\nimport F from '../../utils/func';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n};\r\n\r\nconst handleReducer = {\r\n  [TOGGLE_STATE]: (state) => ({\r\n    ...state,\r\n    isOpen: !state.isOpen\r\n  }),\r\n};\r\n\r\nexport default F.createReducer(handleReducer, initialState);\r\n","export const TOGGLE_STATE = 'TOGGLE_STATE';\r\n","import { ADD_NOTE, UPDATE_NOTE } from './types';\r\nimport F from '../../utils/func';\r\n\r\nconst localNotes = localStorage.getItem('notes');\r\n\r\nconst initialState = {\r\n  notes: localNotes ? JSON.parse(localNotes) : []\r\n};\r\n\r\nconst handleReducer = {\r\n  [ADD_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: [...state.notes, payload]\r\n  }),\r\n  [UPDATE_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: payload\r\n  })\r\n};\r\n\r\nexport default F.createReducer(handleReducer, initialState);\r\n","export const ADD_NOTE = 'ADD_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\n","import { GET_MUSIC, ADD_SONG_TO_FAVORITE, UPDATE_FAVORITE_SONGS } from './types';\r\nimport F from '../../utils/func';\r\n\r\nconst favoriteSongs = localStorage.getItem('favoriteSongs');\r\n\r\nconst initialState = {\r\n  songs: [],\r\n  favoriteSongs: favoriteSongs || {}\r\n};\r\n\r\nconst handleReducer = {\r\n  [GET_MUSIC]: (state, { payload }) => ({\r\n    ...state,\r\n    songs: [...payload]\r\n  }),\r\n  [ADD_SONG_TO_FAVORITE]: (state, { payload }) => ({\r\n    ...state,\r\n    favoriteSongs: {\r\n      ...state.favoriteSongs,\r\n      payload\r\n    }\r\n  }),\r\n  [UPDATE_FAVORITE_SONGS]: (state, { payload }) => ({\r\n    ...state,\r\n    favoriteSongs: payload\r\n  })\r\n};\r\n\r\nexport default F.createReducer(handleReducer, initialState);\r\n","export const GET_MUSIC = 'GET_MUSIC';\r\nexport const ADD_SONG_TO_FAVORITE = 'ADD_SONG_TO_FAVORITE';\r\nexport const UPDATE_FAVORITE_SONGS = 'UPDATE_FAVORITE_SONGS';\r\n","import { UPDATE_SEARCH_COUNTER, UPDATE_PLAY_COUNTER } from './types';\r\nimport F from '../../utils/func';\r\n\r\nconst initialState = {\r\n  artists: {}\r\n};\r\n\r\nconst handleReducer = {\r\n  [UPDATE_SEARCH_COUNTER]: (state, { payload }) => ({\r\n    ...state,\r\n    artists: {\r\n      ...state.artists,\r\n      [payload.artistName]: payload\r\n    }\r\n  }),\r\n  [UPDATE_PLAY_COUNTER]: (state, { payload }) => ({\r\n    ...state,\r\n    artists: {\r\n      ...state.artists,\r\n      [payload.artistName]: payload\r\n    }\r\n  })\r\n};\r\n\r\nexport default F.createReducer(handleReducer, initialState);\r\n","export const UPDATE_SEARCH_COUNTER = 'UPDATE_SEARCH_COUNTER';\r\nexport const UPDATE_PLAY_COUNTER = 'UPDATE_PLAY_COUNTER';\r\n","import { SIGN_IN, LOGOUT } from './types';\r\nimport F from '../../utils/func';\r\n\r\nconst localUser = JSON.parse(localStorage.getItem('user')) || null;\r\n\r\nconst initialState = {\r\n  userName: localUser ? localUser.name : ''\r\n};\r\n\r\nconst handleReducer = {\r\n  [SIGN_IN]: (state, { payload }) => ({\r\n    ...state,\r\n    userName: payload\r\n  }),\r\n  [LOGOUT]: (state) => ({\r\n    ...state\r\n  })\r\n};\r\n\r\nexport default F.createReducer(handleReducer, initialState);\r\n","export const SIGN_IN = 'SIGN IN';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import { combineReducers } from 'redux';\r\nimport sidebarReducer from './sidebar/reducer';\r\nimport notesReducer from './notes/reducer';\r\nimport musicReducer from './music/reducer';\r\nimport analyticsReducer from './analytics/reducer';\r\nimport loginReducer from './login/reducer';\r\n\r\nexport default combineReducers({\r\n  sidebarReducer,\r\n  notesReducer,\r\n  musicReducer,\r\n  analyticsReducer,\r\n  loginReducer\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const text = {\r\n  appName: 'My iTunes',\r\n  musicHeadline: 'iTunes Music',\r\n  favoritesHeadline: 'Favorites',\r\n  modalApply: 'Apply',\r\n  modalCancel: 'Cancel',\r\n  modalAdd: 'Add',\r\n  modalSave: 'Save',\r\n  buttonDelete: 'Delete',\r\n  buttonChange: 'Change',\r\n  buttonSearch: 'Search',\r\n  buttonSignIn: 'Sign In',\r\n  buttonCancel: 'Cancel',\r\n  buttonPlaySong: 'Play preview of song',\r\n  placeholderForGenderSelect: 'Select a gender',\r\n  placeholderForSearchMusic: 'Enter artist',\r\n  placeholderForUserInput: 'Enter your name',\r\n  placeholderForEmailInput: 'Enter your email',\r\n  placeholderForPasswordInput: 'Enter your password',\r\n  genderMale: 'male',\r\n  genderFemale: 'female',\r\n  imgAlt: 'Artist',\r\n  xTitle: 'Artist',\r\n  queriesTitle: 'Count of search queries',\r\n  playingTitle: 'Count of playing',\r\n  closeFavorites: 'Go to my Favorites',\r\n  openFavorites: 'My Favorites',\r\n  searchAnalytics: 'Search Analytics',\r\n  playAnalytics: 'Play Analytics'\r\n};\r\n\r\nexport default text;\r\n","import React from 'react';\r\nimport { VerticalBarSeries, XAxis, XYPlot, YAxis } from 'react-vis';\r\nimport PropTypes from 'prop-types';\r\nimport text from '../../constants/text';\r\n\r\nconst Chart = ({ data, yTitle, headline }) => (\r\n  <div className=\"search_analytics\">\r\n    <h3>{headline}</h3>\r\n    <XYPlot\r\n      height={300}\r\n      width={400}\r\n      xType=\"ordinal\"\r\n    >\r\n      <VerticalBarSeries data={data} />\r\n      <XAxis title={text.xTitle} />\r\n      <YAxis title={yTitle} />\r\n    </XYPlot>\r\n  </div>\r\n);\r\n\r\nChart.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  yTitle: PropTypes.string.isRequired,\r\n  headline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Chart;\r\n","import { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  artists: state.analyticsReducer.artists\r\n});\r\n\r\nexport default connect(mapStateToProps, null);\r\n","import React from 'react';\nimport * as R from 'ramda';\nimport PropTypes from 'prop-types';\nimport Chart from './Chart';\nimport connect from './connect';\nimport text from '../../constants/text';\nimport './Analytics.css';\n\nconst Analytics = ({ artists }) => {\n  const createData = (counterName) => R.pipe(\n    R.values,\n    R.map((it) => ({\n      x: it.artistName,\n      y: it[counterName] || 0\n    })),\n    R.filter((it) => it.y)\n  )(artists);\n\n  const searchData = createData('searchCounter');\n  const playData = createData('playCounter');\n  const showSearchChart = Boolean(searchData.length);\n  const showPlayedChart = Boolean(playData.length);\n  return (\n    <div className=\"wrapper\">\n      <h1>Analytics</h1>\n      <div className=\"analytics\">\n        {showSearchChart\n        && (\n          <Chart\n            data={searchData}\n            yTitle={text.queriesTitle}\n            headline={text.searchAnalytics}\n          />\n        )}\n\n        {showPlayedChart\n        && (\n          <Chart\n            data={playData}\n            yTitle={text.playingTitle}\n            headline={text.playAnalytics}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nAnalytics.propTypes = {\n  artists: PropTypes.shape({\n    artistName: PropTypes.string,\n    searchCounter: PropTypes.number,\n    playCounter: PropTypes.number\n  }).isRequired\n};\n\nexport default connect(Analytics);\n","const utils = {\r\n  sidebarItems: [\r\n    {\r\n      title: 'Musicians',\r\n      path: '/home/musicians',\r\n      iconType: 'crown'\r\n    },\r\n    {\r\n      title: 'Analytics',\r\n      path: '/home/analytics',\r\n      iconType: 'line-chart'\r\n    },\r\n    {\r\n      title: 'Notes',\r\n      path: '/home/notes',\r\n      iconType: 'form'\r\n    },\r\n    {\r\n      title: 'Music',\r\n      path: '/home/music',\r\n      iconType: 'customer-service'\r\n    }\r\n  ],\r\n  userTableColumns: ['Name', 'Age', 'Gender', 'Region'],\r\n  types: {\r\n    title: 'title',\r\n    date: 'date',\r\n    text: 'text'\r\n  },\r\n  musicians: [\r\n    {\r\n      name: 'Beyonce',\r\n      age: 38,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Katy Perry',\r\n      age: 34,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Rihanna',\r\n      age: 31,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Madonna',\r\n      age: 61,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Sia',\r\n      age: 43,\r\n      gender: 'female',\r\n      region: 'Australia'\r\n    },\r\n    {\r\n      name: 'Lady GaGa',\r\n      age: 33,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Lana Del Ray',\r\n      age: 34,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Justin Timberlake',\r\n      age: 38,\r\n      gender: 'male',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Chris Brown',\r\n      age: 30,\r\n      gender: 'male',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Justin Bieber',\r\n      age: 25,\r\n      gender: 'male',\r\n      region: 'Canada'\r\n    },\r\n    {\r\n      name: 'Ed Sheeran',\r\n      age: 28,\r\n      gender: 'male',\r\n      region: 'Great Britain'\r\n    },\r\n    {\r\n      name: 'Hozier',\r\n      age: 29,\r\n      gender: 'male',\r\n      region: 'Ireland'\r\n    },\r\n    {\r\n      name: 'Whitney Houston',\r\n      age: 48,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Cardi B',\r\n      age: 26,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Billie Eilish',\r\n      age: 17,\r\n      gender: 'female',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Martin Garrix',\r\n      age: 23,\r\n      gender: 'male',\r\n      region: 'Netherlands'\r\n    },\r\n    {\r\n      name: '6lack',\r\n      age: 27,\r\n      gender: 'male',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Drake',\r\n      age: 32,\r\n      gender: 'male',\r\n      region: 'Canada'\r\n    },\r\n    {\r\n      name: 'Kanye West',\r\n      age: 42,\r\n      gender: 'male',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Bones',\r\n      age: 25,\r\n      gender: 'male',\r\n      region: 'USA'\r\n    },\r\n    {\r\n      name: 'Post Malone',\r\n      age: 24,\r\n      gender: 'male',\r\n      region: 'USA' }\r\n  ]\r\n};\r\n\r\nexport default utils;\r\n","import React from 'react';\r\nimport { Button, Icon } from 'antd/es';\r\nimport * as R from 'ramda';\r\nimport PropTypes from 'prop-types';\r\nimport utils from '../../constants/utils';\r\nimport text from '../../constants/text';\r\nimport './Musicians.css';\r\n\r\nconst Musicians = ({ history }) => {\r\n  const makeCell = (it, index) => <td key={`${index}${it}`}>{it}</td>;\r\n\r\n  const searchSongs = (term) => () => {\r\n    history.push('/home/music', { term });\r\n  };\r\n\r\n  const makeLine = (it, index) => (\r\n    <tr key={`${it.name}${index}`}>\r\n      { R.map(makeCell, R.values(it)) }\r\n      <td>\r\n        <Button onClick={searchSongs(it.name)}>\r\n          { text.buttonSearch }\r\n          <Icon type=\"apple\" />\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1>Musicians</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            { R.map(makeCell, utils.userTableColumns) }\r\n          </tr>\r\n        </thead>\r\n        { R.map(makeLine, utils.musicians) }\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nMusicians.propTypes = {\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Musicians;\r\n","import { ADD_NOTE, UPDATE_NOTE } from './types';\r\n\r\nexport const addNote = (currentNote) => ({\r\n  type: ADD_NOTE,\r\n  payload: currentNote\r\n});\r\n\r\nexport const updateNote = (updateNotes) => ({\r\n  type: UPDATE_NOTE,\r\n  payload: updateNotes\r\n});\r\n","import * as R from 'ramda';\r\nimport generateId from 'nanoid';\r\nimport * as action from '../../redux/notes/actions';\r\n\r\nexport const addNote = (note) => (dispatch) => {\r\n  const noteWithId = { ...note, id: generateId() };\r\n  const notes = R.pipe(\r\n    (key) => localStorage.getItem(key),\r\n    R.defaultTo('[]'),\r\n    JSON.parse\r\n  )('notes');\r\n  const allNotes = [...notes, noteWithId];\r\n  localStorage.setItem('notes', JSON.stringify(allNotes));\r\n  dispatch(action.addNote(noteWithId));\r\n};\r\n\r\nexport const deleteNote = (id) => (dispatch, getState) => {\r\n  const { notes } = getState().notesReducer;\r\n  const isAnotherId = (it) => it.id !== id;\r\n  const updateNotes = R.filter(isAnotherId, notes);\r\n  localStorage.setItem('notes', JSON.stringify(updateNotes));\r\n  dispatch(action.updateNote(updateNotes));\r\n};\r\n\r\nexport const updateNoteById = (id, newValue, type) => (dispatch, getState) => {\r\n  const { notes } = getState().notesReducer;\r\n  const updateNotes = R.map((it) => {\r\n    if (it.id !== id) return it;\r\n    return {\r\n      ...it,\r\n      [type]: newValue\r\n    };\r\n  }, notes);\r\n  localStorage.setItem('notes', JSON.stringify(updateNotes));\r\n  dispatch(action.updateNote(updateNotes));\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { addNote, deleteNote, updateNoteById } from './helpers';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notes: state.notesReducer.notes\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNote,\r\n  deleteNote,\r\n  updateNoteById\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps);\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { EditContainer } from '../index';\r\nimport connect from '../../connect';\r\nimport utils from '../../../../constants/utils';\r\nimport buttonText from '../../../../constants/text';\r\nimport './Note.scss';\r\n\r\nclass Note extends React.Component {\r\n    state = {\r\n      type: null,\r\n      value: ''\r\n    };\r\n\r\n    onEdit = (type, value) => () => {\r\n      this.setState({\r\n        type,\r\n        value\r\n      });\r\n    };\r\n\r\n    onChange = ({ target: { value } }) => {\r\n      this.setState({\r\n        value\r\n      });\r\n    };\r\n\r\n    onUpdate = () => {\r\n      const { type, value } = this.state;\r\n      const { id, updateNoteById } = this.props;\r\n      updateNoteById(id, value, type);\r\n      this.setState({\r\n        value: '',\r\n        type: null\r\n      });\r\n    };\r\n\r\n    deleteNote = () => {\r\n      const { id, deleteNote } = this.props;\r\n      deleteNote(id);\r\n    };\r\n\r\n    render() {\r\n      const { type, value } = this.state;\r\n      const { title, date, text } = this.props;\r\n\r\n      return (\r\n        <div className=\"note\">\r\n          <header>\r\n            <div className=\"note-info\">\r\n              <EditContainer\r\n                type={type}\r\n                containerType={utils.types.title}\r\n                value={value}\r\n                onChange={this.onChange}\r\n                onUpdate={this.onUpdate}\r\n                text={title}\r\n                onEdit={this.onEdit}\r\n              />\r\n              <EditContainer\r\n                type={type}\r\n                containerType={utils.types.date}\r\n                value={value}\r\n                onChange={this.onChange}\r\n                onUpdate={this.onUpdate}\r\n                text={date}\r\n                onEdit={this.onEdit}\r\n              />\r\n            </div>\r\n            <Button type=\"primary\" onClick={this.deleteNote}>\r\n              {buttonText.buttonDelete}\r\n            </Button>\r\n          </header>\r\n\r\n          <EditContainer\r\n            type={type}\r\n            containerType={utils.types.text}\r\n            value={value}\r\n            onChange={this.onChange}\r\n            onUpdate={this.onUpdate}\r\n            text={text}\r\n            onEdit={this.onEdit}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nNote.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  updateNoteById: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(Note);\r\n","import React from 'react';\r\nimport { Icon, Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport './EditContainer.scss';\r\n\r\nconst EditContainer = ({ type, containerType, value, onChange, onUpdate, onEdit, text }) => {\r\n  const isSameType = type === containerType;\r\n\r\n  return (\r\n    <div className=\"edit-container\">\r\n      {\r\n                isSameType\r\n                  ? (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name={containerType}\r\n                      value={value}\r\n                      onChange={onChange}\r\n                    />\r\n                  )\r\n                  : <p>{text}</p>\r\n            }\r\n      {\r\n        <Icon\r\n          type={isSameType ? 'check-circle' : 'edit'}\r\n          onClick={isSameType ? onUpdate : onEdit(containerType, text)}\r\n          className={isSameType ? 'save' : 'edit'}\r\n        />\r\n            }\r\n    </div>\r\n  );\r\n};\r\n\r\nEditContainer.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  containerType: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default EditContainer;\r\n","import React, { Component } from 'react';\r\nimport { Button, Input, Modal } from 'antd/es';\r\nimport * as R from 'ramda';\r\nimport connect from './connect';\r\nimport { Note } from './components';\r\nimport text from '../../constants/text';\r\nimport './Notes.css';\r\n\r\nclass Notes extends Component {\r\n    state = {\r\n      visible: false,\r\n      currentNote: {}\r\n    };\r\n\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    };\r\n\r\n    handleCancel = () => {\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n\r\n    handleAdd = () => {\r\n      const { currentNote } = this.state;\r\n      const { addNote } = this.props;\r\n      addNote(currentNote);\r\n      this.setState({\r\n        visible: false,\r\n        currentNote: {}\r\n      });\r\n    };\r\n\r\n    onChange = ({ target }) => {\r\n      const { name, value } = target;\r\n      const { currentNote } = this.state;\r\n      this.setState({\r\n        currentNote: {\r\n          ...currentNote,\r\n          [name]: value\r\n        }\r\n      });\r\n    };\r\n\r\n    render() {\r\n      const { visible, currentNote } = this.state;\r\n      const { notes } = this.props;\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <h1>Notes</h1>\r\n          <Button onClick={this.showModal} type=\"primary\">\r\n                    Add note\r\n          </Button>\r\n          <Modal\r\n            title=\"Add Note\"\r\n            visible={visible}\r\n            onCancel={this.handleCancel}\r\n            footer={[\r\n              <Button type=\"back\" onClick={this.handleCancel}>\r\n                {text.modalCancel}\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={this.handleAdd}>\r\n                {text.modalAdd}\r\n              </Button>\r\n            ]}\r\n          >\r\n            <Input\r\n              placeholder=\"Title\"\r\n              name=\"title\"\r\n              onChange={this.onChange}\r\n              value={currentNote.title}\r\n            />\r\n            <Input\r\n              placeholder=\"Date in format MM.DD.YYYY\"\r\n              name=\"date\"\r\n              onChange={this.onChange}\r\n              value={currentNote.date}\r\n            />\r\n            <Input.TextArea\r\n              placeholder=\"Your note...\"\r\n              name=\"text\"\r\n              onChange={this.onChange}\r\n              value={currentNote.text}\r\n            />\r\n          </Modal>\r\n          <div className=\"notes\">\r\n            {\r\n                        R.map((note) => (\r\n                          <Note\r\n                            key={note.id}\r\n                            id={note.id}\r\n                            title={note.title}\r\n                            date={note.date}\r\n                            text={note.text}\r\n                          />\r\n                        ),\r\n                        notes)\r\n                    }\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default connect(Notes);\r\n","import { UPDATE_SEARCH_COUNTER, UPDATE_PLAY_COUNTER } from './types';\r\n\r\nexport const updateSearchCounter = (artist) => ({\r\n  type: UPDATE_SEARCH_COUNTER,\r\n  payload: artist\r\n});\r\n\r\nexport const updatePlayCounter = (artist) => ({\r\n  type: UPDATE_PLAY_COUNTER,\r\n  payload: artist\r\n});\r\n","import Axios from 'axios';\r\n\r\nconst axios = {\r\n  axiosForMusic: Axios.create({\r\n    baseURL: 'https://itunes.apple.com/search?',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json'\r\n    },\r\n    responseType: 'json'\r\n  })\r\n};\r\n\r\nexport default axios;\r\n","import axios from '../axios';\r\n\r\nconst api = {\r\n  getMusic: (params) => axios.axiosForMusic.get('', { params })\r\n};\r\n\r\nexport default api;\r\n","import * as R from 'ramda';\r\nimport * as action from '../../redux/music/actions';\r\nimport * as analyticsActions from '../../redux/analytics/actions';\r\nimport api from '../../methods/api';\r\n\r\nexport const getMusic = (params) => async (dispatch, getState) => {\r\n  const { data: { results } } = await api.getMusic(params);\r\n  if (results.length) {\r\n    const { artistName } = R.pipe(\r\n      R.filter((track) => R.indexOf('&', track.artistName) === -1),\r\n      R.head,\r\n    )(results);\r\n    const artist = getState().analyticsReducer.artists[artistName] || {};\r\n    dispatch(analyticsActions.updateSearchCounter({\r\n      ...artist,\r\n      artistName,\r\n      searchCounter: artist.searchCounter ? artist.searchCounter + 1 : 1\r\n    }));\r\n  }\r\n  dispatch(action.getMusic(results));\r\n};\r\n\r\nexport const countPlaying = (name) => (dispatch, getState) => {\r\n  const artistName = R.indexOf('&', name) === -1 ? name : R.split(' & ', name)[0];\r\n  const artist = getState().analyticsReducer.artists[artistName] || {};\r\n  dispatch(analyticsActions.updatePlayCounter({\r\n    ...artist,\r\n    artistName,\r\n    playCounter: artist.playCounter ? artist.playCounter + 1 : 1\r\n  }));\r\n};\r\n\r\nexport const addSongToFav = (song) => (dispatch) => {\r\n  const favSongs = R.pipe(\r\n    (key) => localStorage.getItem(key),\r\n    R.defaultTo('{}'),\r\n    JSON.parse\r\n  )('favoriteSongs');\r\n  if (!R.has(song.trackId, favSongs)) favSongs[song.trackId] = song;\r\n  localStorage.setItem('favoriteSongs', JSON.stringify(favSongs));\r\n  dispatch(action.addSongToFavorite(song));\r\n};\r\n\r\nexport const deleteFromFav = (id) => (dispatch) => {\r\n  const favSongs = R.pipe(\r\n    (key) => localStorage.getItem(key),\r\n    R.defaultTo('{}'),\r\n    JSON.parse\r\n  )('favoriteSongs');\r\n  delete favSongs[id];\r\n  localStorage.setItem('favoriteSongs', JSON.stringify(favSongs));\r\n  dispatch(action.updateFavoriteSongs(favSongs));\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { getMusic, countPlaying, addSongToFav, deleteFromFav } from './helpers';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  songs: state.musicReducer.songs\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getMusic,\r\n  countPlaying,\r\n  addSongToFav,\r\n  deleteFromFav\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps);\r\n","import { GET_MUSIC, ADD_SONG_TO_FAVORITE, UPDATE_FAVORITE_SONGS } from './types';\r\n\r\nexport const getMusic = (songs) => ({\r\n  type: GET_MUSIC,\r\n  payload: songs\r\n});\r\n\r\nexport const addSongToFavorite = (song) => ({\r\n  type: ADD_SONG_TO_FAVORITE,\r\n  payload: song\r\n});\r\n\r\nexport const updateFavoriteSongs = (songs) => ({\r\n  type: UPDATE_FAVORITE_SONGS,\r\n  payload: songs\r\n});\r\n","import React from 'react';\r\nimport { Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport text from '../../constants/text';\r\nimport './Header.css';\r\n\r\nconst Header = ({ userName, logout }) => (\r\n  <header>\r\n    <h1 className=\"headline\">\r\n      {text.appName}\r\n      <Icon type=\"apple\" theme=\"filled\" />\r\n    </h1>\r\n    <p>\r\n      {userName}\r\n      <Icon type=\"logout\" onClick={logout} />\r\n    </p>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import { connect } from 'react-redux';\r\nimport { toggleStateSideBar } from '../../redux/sidebar/actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isOpen: state.sidebarReducer.isOpen\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleState: () => dispatch(toggleStateSideBar())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps);\r\n","import { TOGGLE_STATE } from './types';\r\n\r\nexport const toggleStateSideBar = () => ({\r\n  type: TOGGLE_STATE\r\n});\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd/es';\r\nimport * as R from 'ramda';\r\nimport utils from '../../constants/utils';\r\nimport connect from './connect';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends Component {\r\n    renderList = (isOpen) => (\r\n      R.map((it) => (\r\n        <NavLink to={it.path} key={it.title} activeClassName=\"active-link\" className=\"link\">\r\n          <Icon type={it.iconType} />\r\n          {isOpen && it.title}\r\n        </NavLink>\r\n      ), utils.sidebarItems)\r\n    );\r\n\r\n    render() {\r\n      const { isOpen, toggleState } = this.props;\r\n      return (\r\n        <aside className={`nav_bar ${isOpen ? 'open' : 'close'}`}>\r\n          <ul>\r\n            {this.renderList(isOpen)}\r\n          </ul>\r\n          <button type=\"submit\" onClick={toggleState}>\r\n            <Icon type={isOpen ? 'double-left' : 'double-right'} />\r\n            {isOpen && 'Collapse Sidebar' }\r\n          </button>\r\n        </aside>\r\n      );\r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  toggleState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(Sidebar);\r\n","import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Button, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport F from '../../utils/func';\r\nimport './Player.css';\r\n\r\nclass Player extends React.Component {\r\n    state = {\r\n      progress: 0,\r\n      playedSeconds: 0,\r\n    };\r\n\r\n    changeProgress = ({ played, playedSeconds }) => {\r\n      this.setState({\r\n        progress: played,\r\n        playedSeconds\r\n      });\r\n    };\r\n\r\n    render() {\r\n      const { url, track, play, onPlay, onStop } = this.props;\r\n      const { playedSeconds, progress } = this.state;\r\n\r\n      return (\r\n        <div className=\"player_wrapper\">\r\n          <ReactPlayer\r\n            url={url}\r\n            playing={play}\r\n            fileConfig={{ forceAudio: true }}\r\n            onProgress={this.changeProgress}\r\n          />\r\n          <div className=\"player\">\r\n            <Button type=\"primary\" onClick={play ? onStop : onPlay} id={track}>\r\n              <Icon type={play ? 'pause' : 'caret-right'} />\r\n            </Button>\r\n            <span>{`0:${F.createCorrectDurationPart(Math.round(playedSeconds))} / 0:30`}</span>\r\n            <div className=\"progress_bar\">\r\n              <span style={{ width: `${progress * 100}%` }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nPlayer.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  track: PropTypes.number.isRequired,\r\n  play: PropTypes.bool.isRequired,\r\n  onPlay: PropTypes.func.isRequired,\r\n  onStop: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport * as R from 'ramda';\r\nimport { Avatar } from '../index';\r\nimport Player from '../Player/Player';\r\nimport F from '../../utils/func';\r\nimport './Card.css';\r\n\r\n\r\nclass Card extends React.Component {\r\n    state = {\r\n      isFav: R.path(['item', 'isFavorite'], this.props)\r\n    };\r\n\r\n    addToFavorite = (song) => () => {\r\n      const { addSongToFav } = this.props;\r\n      this.setState({\r\n        isFav: true\r\n      });\r\n      addSongToFav(song);\r\n    };\r\n\r\n    deleteFromFavorite = (id) => () => {\r\n      const { deleteFromFav } = this.props;\r\n      this.setState({\r\n        isFav: false\r\n      });\r\n      deleteFromFav(id);\r\n    };\r\n\r\n    render() {\r\n      const { item, play, onPlay, onStop } = this.props;\r\n      const {\r\n        artworkUrl100,\r\n        artistName,\r\n        trackName,\r\n        collectionName,\r\n        country,\r\n        releaseDate,\r\n        trackTimeMillis,\r\n        previewUrl,\r\n        trackId\r\n      } = item;\r\n      const { isFav } = this.state;\r\n\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"info\">\r\n            <Avatar url={artworkUrl100} />\r\n            <div className=\"text\">\r\n              <h2>{`${F.parseName(artistName)} - ${F.parseName(trackName)}`}</h2>\r\n              <p>{`Album: ${F.parseName(collectionName)}`}</p>\r\n              <p>{`Country: ${country}`}</p>\r\n              <p>{`Date: ${F.parseDateRelease(releaseDate)}`}</p>\r\n              <p>{`Duration: ${F.parseDuration(trackTimeMillis)}`}</p>\r\n            </div>\r\n            <Icon\r\n              type=\"heart\"\r\n              onClick={isFav ? this.deleteFromFavorite(trackId) : this.addToFavorite(item)}\r\n              theme={isFav ? 'filled' : ''}\r\n            />\r\n          </div>\r\n          <Player\r\n            url={previewUrl}\r\n            track={trackId}\r\n            play={play}\r\n            onPlay={onPlay}\r\n            onStop={onStop}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    artworkUrl100: PropTypes.string.isRequired,\r\n    artistName: PropTypes.string.isRequired,\r\n    trackName: PropTypes.string.isRequired,\r\n    collectionName: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n    releaseDate: PropTypes.string.isRequired,\r\n    trackTimeMillis: PropTypes.number.isRequired,\r\n    previewUrl: PropTypes.string.isRequired,\r\n    trackId: PropTypes.number.isRequired,\r\n    isFavorite: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  play: PropTypes.bool.isRequired,\r\n  onPlay: PropTypes.func.isRequired,\r\n  onStop: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport text from '../../constants/text';\r\nimport './Avatar.css';\r\n\r\nconst Avatar = ({ url }) => (\r\n  <img src={url} alt={text.imgAlt} />\r\n);\r\n\r\nAvatar.propTypes = {\r\n  url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { Component } from 'react';\r\nimport { Input, Spin, Button } from 'antd';\r\nimport * as R from 'ramda';\r\nimport PropTypes from 'prop-types';\r\nimport connect from './connect';\r\nimport { Card } from '../../components';\r\nimport text from '../../constants/text';\r\nimport './Music.css';\r\n\r\nclass Music extends Component {\r\n  state = {\r\n    params: {\r\n      term: null,\r\n      entity: 'song'\r\n    },\r\n    loading: false,\r\n    playing: false,\r\n    trackId: '',\r\n    isOpenFavorites: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location: { state } } = this.props;\r\n    if (state) this.onSearch(state.term);\r\n  }\r\n\r\n  onPlay = (trackId, name) => () => {\r\n    const { countPlaying } = this.props;\r\n    this.setState({\r\n      playing: true,\r\n      trackId\r\n    });\r\n    countPlaying(name);\r\n  };\r\n\r\n  onStop = () => {\r\n    this.setState({\r\n      playing: false\r\n    });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    const { params } = this.state;\r\n    this.setState({\r\n      params: {\r\n        ...params,\r\n        term: value\r\n      },\r\n      isOpenFavorites: false\r\n    }, this.getSongs);\r\n  };\r\n\r\n  getSongs = async () => {\r\n    const { params } = this.state;\r\n    const { getMusic } = this.props;\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    await getMusic(params);\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  onChange = ({ target: { value } }) => {\r\n    const { params } = this.state;\r\n    this.setState({\r\n      params: {\r\n        ...params,\r\n        term: value\r\n      }\r\n    });\r\n  };\r\n\r\n  showFavorites = () => {\r\n    this.setState({\r\n      isOpenFavorites: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { songs, addSongToFav, deleteFromFav } = this.props;\r\n    const { loading, playing, trackId, params: { term }, isOpenFavorites } = this.state;\r\n    const favSongs = JSON.parse(localStorage.getItem('favoriteSongs')) || {};\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Spin spinning={loading}>\r\n          <h1>{isOpenFavorites ? text.favoritesHeadline : text.musicHeadline}</h1>\r\n          <div className=\"filters\">\r\n            <Input.Search\r\n              placeholder={text.placeholderForSearchMusic}\r\n              enterButton={text.buttonSearch}\r\n              onSearch={this.onSearch}\r\n              value={term}\r\n              onChange={this.onChange}\r\n            />\r\n            <Button\r\n              type={isOpenFavorites ? 'default' : 'primary'}\r\n              onClick={this.showFavorites}\r\n            >\r\n              {isOpenFavorites ? text.openFavorites : text.closeFavorites}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"cards\">\r\n            {\r\n              R.map((it) => (\r\n                <Card\r\n                  item={{ ...it, isFavorite: R.has(it.trackId, favSongs) }}\r\n                  play={playing && it.trackId === trackId}\r\n                  key={it.trackId}\r\n                  onPlay={this.onPlay(it.trackId, it.artistName)}\r\n                  onStop={this.onStop}\r\n                  addSongToFav={addSongToFav}\r\n                  deleteFromFav={deleteFromFav}\r\n                />\r\n              ),\r\n              isOpenFavorites ? R.values(favSongs) : songs)\r\n            }\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMusic.propTypes = {\r\n  countPlaying: PropTypes.func.isRequired,\r\n  getMusic: PropTypes.func.isRequired,\r\n  songs: PropTypes.array.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(Music);\r\n","import * as action from '../../redux/login/actions';\r\n\r\nexport const signIn = (name, email, password) => (dispatch) => {\r\n  localStorage.setItem('user', JSON.stringify({\r\n    name,\r\n    email,\r\n    password\r\n  }));\r\n  dispatch(action.signIn(name));\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(action.logout());\r\n};\r\n","import { SIGN_IN, LOGOUT } from './types';\r\n\r\nexport const signIn = (name) => ({\r\n  type: SIGN_IN,\r\n  payload: name\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT\r\n});\r\n","import { connect } from 'react-redux';\r\nimport { signIn } from './helpers';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.loginReducer.userName\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  signIn\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps);\r\n","import React from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from './connect';\r\nimport text from '../../constants/text';\r\nimport './Login.scss';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n      userName: null,\r\n      email: null,\r\n      password: null\r\n    };\r\n\r\n    onChange = ({ target: { name, value } }) => {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    };\r\n\r\n    handleCancel = () => {\r\n      this.setState({\r\n        userName: null,\r\n        email: null,\r\n        password: null\r\n      });\r\n    };\r\n\r\n    signIn = () => {\r\n      const { userName, email, password } = this.state;\r\n      const { signIn, history } = this.props;\r\n      signIn(userName, email, password);\r\n      history.push('/home/musicians');\r\n    };\r\n\r\n    render() {\r\n      const { userName, email, password } = this.state;\r\n\r\n      return (\r\n        <div className=\"wrapper login\">\r\n          <h1>Sign in</h1>\r\n          <div className=\"sign_in\">\r\n            <Input\r\n              placeholder={text.placeholderForUserInput}\r\n              value={userName}\r\n              name=\"userName\"\r\n              onChange={this.onChange}\r\n            />\r\n            <Input\r\n              placeholder={text.placeholderForEmailInput}\r\n              value={email}\r\n              name=\"email\"\r\n              onChange={this.onChange}\r\n            />\r\n            <Input.Password\r\n              placeholder={text.placeholderForPasswordInput}\r\n              value={password}\r\n              name=\"password\"\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"sign_in_actions\">\r\n              <Button onClick={this.handleCancel}>\r\n                {text.buttonCancel}\r\n              </Button>\r\n              <Button type=\"primary\" onClick={this.signIn}>\r\n                {text.buttonSignIn}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n  signIn: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(Login);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst withAuthorizationUser = (Component) => {\r\n  class WithAuthorizationUser extends React.Component {\r\n        state = {\r\n          userName: localStorage.user ? JSON.parse(localStorage.user).name : null\r\n        };\r\n\r\n        logout = () => {\r\n          const { logout } = this.props;\r\n          this.setState({\r\n            userName: null\r\n          }, () => {\r\n            localStorage.removeItem('user');\r\n            logout();\r\n          });\r\n        };\r\n\r\n        render() {\r\n          const { userName } = this.state;\r\n\r\n          if (!userName) {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n\r\n          // eslint-disable-next-line react/jsx-props-no-spreading\r\n          return <Component {...this.props} userName={userName} logout={this.logout} />;\r\n        }\r\n  }\r\n\r\n  return WithAuthorizationUser;\r\n};\r\n\r\nexport default withAuthorizationUser;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport withAuthorizationUser from './hocs/withAuthorizationUser';\r\nimport { signIn, logout } from './pages/Login/helpers';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.loginReducer.userName\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  signIn,\r\n  logout\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthorizationUser);\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, Sidebar } from './components';\r\nimport { Analytics, Music, Musicians, Notes } from './pages';\r\nimport connect from './connect';\r\n\r\nconst Navigation = ({ userName, logout }) => (\r\n  <>\r\n    <Header userName={userName} logout={logout} />\r\n    <main>\r\n      <Sidebar />\r\n      <Route path=\"/home/musicians\" exact component={Musicians} />\r\n      <Route path=\"/home/analytics\" exact component={Analytics} />\r\n      <Route path=\"/home/notes\" exact component={Notes} />\r\n      <Route path=\"/home/music\" exact component={Music} />\r\n    </main>\r\n  </>\r\n);\r\n\r\nNavigation.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(Navigation);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport * as R from 'ramda';\r\nimport { Login } from './pages';\r\nimport Navigation from './Navigation';\r\nimport 'antd/dist/antd.css';\r\nimport 'react-vis/dist/style.css';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const userName = R.pipe(\r\n    (it) => localStorage.getItem(it),\r\n    JSON.parse,\r\n    R.path(['name'])\r\n  )('user');\r\n\r\n  return (\r\n    <Router>\r\n      <Redirect exact from=\"/\" to=\"/login\" />\r\n      {userName && <Redirect exact from=\"/login\" to=\"/home\" />}\r\n      <Switch>\r\n        <Route path=\"/home\" component={Navigation} />\r\n        <Route path=\"/login\" component={Login} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst rootStore = createStore(store, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={rootStore}>\r\n    <App />\r\n  </Provider>, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}