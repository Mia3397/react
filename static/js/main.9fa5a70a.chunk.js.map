{"version":3,"sources":["utils/func.js","redux/sidebar/reducer.js","redux/sidebar/types.js","redux/notes/reducer.js","redux/notes/types.js","redux/music/reducer.js","redux/music/types.js","redux/analytics/reducer.js","redux/analytics/types.js","redux/login/reducer.js","redux/login/types.js","redux/index.js","serviceWorker.js","constants/text.js","pages/Analytics/Chart.js","pages/Analytics/connect.js","pages/Analytics/Analytics.js","constants/utils.js","pages/Musicians/Musicians.js","redux/notes/actions.js","pages/Notes/helpers.js","pages/Notes/connect.js","pages/Notes/components/Note/Note.js","pages/Notes/components/EditContainer/EditContainer.js","pages/Notes/Notes.js","redux/analytics/actions.js","axios.js","methods/api.js","pages/Music/helpers.js","pages/Music/connect.js","redux/music/actions.js","components/Header/Header.js","components/Sidebar/connect.js","redux/sidebar/actions.js","components/Sidebar/Sidebar.js","components/Player/Player.js","components/Card/Card.js","components/Avatar/Avatar.js","pages/Music/Music.js","pages/Login/helpers.js","redux/login/actions.js","pages/Login/connect.js","pages/Login/Login.js","hocs/withAuthorizationUser.js","connect.js","Navigation.js","App.js","index.js"],"names":["createCorrectDurationPart","part","String","length","time","date","Date","getMinutes","getSeconds","toDateString","slice","name","handleReducer","defaultState","state","action","handler","type","F","isOpen","localNotes","localStorage","getItem","initialState","notes","JSON","parse","payload","songs","favoriteSongs","artists","artistName","localUser","userName","combineReducers","sidebarReducer","notesReducer","musicReducer","analyticsReducer","loginReducer","Boolean","window","location","hostname","match","text","appName","musicHeadline","favoritesHeadline","modalApply","modalCancel","modalAdd","modalSave","buttonDelete","buttonChange","buttonSearch","buttonSignIn","buttonCancel","buttonPlaySong","placeholderForGenderSelect","placeholderForSearchMusic","placeholderForUserInput","placeholderForEmailInput","placeholderForPasswordInput","genderMale","genderFemale","imgAlt","xTitle","queriesTitle","playingTitle","closeFavorites","openFavorites","searchAnalytics","playAnalytics","Chart","data","yTitle","headline","className","height","width","xType","title","connect","createData","counterName","R","it","x","y","searchData","playData","showSearchChart","showPlayedChart","utils","sidebarItems","path","iconType","userTableColumns","types","musicians","age","gender","region","Musicians","history","makeCell","index","key","onClick","term","push","updateNote","updateNotes","mapDispatchToProps","addNote","note","dispatch","noteWithId","id","generateId","allNotes","setItem","stringify","deleteNote","getState","updateNoteById","newValue","value","onEdit","setState","onChange","target","onUpdate","props","this","containerType","buttonText","React","Component","EditContainer","isSameType","visible","currentNote","showModal","handleCancel","handleAdd","onCancel","footer","placeholder","TextArea","updateSearchCounter","artist","axios","axiosForMusic","Axios","create","baseURL","headers","Accept","responseType","api","getMusic","params","get","a","results","track","analyticsActions","searchCounter","countPlaying","playCounter","addSongToFav","song","favSongs","trackId","deleteFromFav","Header","logout","theme","toggleState","renderList","to","activeClassName","Player","progress","playedSeconds","changeProgress","played","url","play","onPlay","onStop","playing","fileConfig","forceAudio","onProgress","Math","round","style","Card","isFav","addToFavorite","deleteFromFavorite","item","artworkUrl100","trackName","collectionName","country","releaseDate","trackTimeMillis","previewUrl","Avatar","src","alt","entity","loading","isOpenFavorites","isError","onSearch","getSongs","catch","setError","showFavorites","renderSongs","isFavorite","spinning","Search","enterButton","signIn","email","password","Password","withAuthorizationUser","user","removeItem","compose","exact","component","Analytics","Notes","Music","App","from","Navigation","Login","rootStore","createStore","store","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9fa5a70a.chunk.js","sourcesContent":["const createCorrectDurationPart = (part) => (String(part).length > 1 ? part : `0${part}`);\n\nconst parseDuration = (time) => {\n  const date = new Date(time);\n  return `${createCorrectDurationPart(date.getMinutes())}:${createCorrectDurationPart(date.getSeconds())}`;\n};\n\nconst parseDateRelease = (date) => new Date(date).toDateString().slice(4);\n\nconst parseName = (name = '') => (name.length > 15 ? `${name.slice(0, 15)}...` : name);\n\nconst createReducer = (handleReducer, defaultState) => (state = defaultState, action) => {\n  const handler = handleReducer[action.type];\n  return handler ? handler(state, action) : state;\n};\n\nexport default {\n  parseDuration,\n  parseDateRelease,\n  createCorrectDurationPart,\n  parseName,\n  createReducer\n};\n","import { TOGGLE_STATE } from './types';\nimport F from '../../utils/func';\n\nconst initialState = {\n  isOpen: false,\n};\n\nconst handleReducer = {\n  [TOGGLE_STATE]: (state) => ({\n    ...state,\n    isOpen: !state.isOpen\n  }),\n};\n\nexport default F.createReducer(handleReducer, initialState);\n","export const TOGGLE_STATE = 'TOGGLE_STATE';\n","import { ADD_NOTE, UPDATE_NOTE } from './types';\nimport F from '../../utils/func';\n\nconst localNotes = localStorage.getItem('notes');\n\nconst initialState = {\n  notes: localNotes ? JSON.parse(localNotes) : []\n};\n\nconst handleReducer = {\n  [ADD_NOTE]: (state, { payload }) => ({\n    ...state,\n    notes: [...state.notes, payload]\n  }),\n  [UPDATE_NOTE]: (state, { payload }) => ({\n    ...state,\n    notes: payload\n  })\n};\n\nexport default F.createReducer(handleReducer, initialState);\n","export const ADD_NOTE = 'ADD_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\n","import { GET_MUSIC, ADD_SONG_TO_FAVORITE, UPDATE_FAVORITE_SONGS } from './types';\nimport F from '../../utils/func';\n\nconst favoriteSongs = localStorage.getItem('favoriteSongs');\n\nconst initialState = {\n  songs: [],\n  favoriteSongs: favoriteSongs || {}\n};\n\nconst handleReducer = {\n  [GET_MUSIC]: (state, { payload }) => ({\n    ...state,\n    songs: [...payload]\n  }),\n  [ADD_SONG_TO_FAVORITE]: (state, { payload }) => ({\n    ...state,\n    favoriteSongs: {\n      ...state.favoriteSongs,\n      payload\n    }\n  }),\n  [UPDATE_FAVORITE_SONGS]: (state, { payload }) => ({\n    ...state,\n    favoriteSongs: payload\n  })\n};\n\nexport default F.createReducer(handleReducer, initialState);\n","export const GET_MUSIC = 'GET_MUSIC';\nexport const ADD_SONG_TO_FAVORITE = 'ADD_SONG_TO_FAVORITE';\nexport const UPDATE_FAVORITE_SONGS = 'UPDATE_FAVORITE_SONGS';\n","import { UPDATE_SEARCH_COUNTER, UPDATE_PLAY_COUNTER } from './types';\nimport F from '../../utils/func';\n\nconst initialState = {\n  artists: {}\n};\n\nconst handleReducer = {\n  [UPDATE_SEARCH_COUNTER]: (state, { payload }) => ({\n    ...state,\n    artists: {\n      ...state.artists,\n      [payload.artistName]: payload\n    }\n  }),\n  [UPDATE_PLAY_COUNTER]: (state, { payload }) => ({\n    ...state,\n    artists: {\n      ...state.artists,\n      [payload.artistName]: payload\n    }\n  })\n};\n\nexport default F.createReducer(handleReducer, initialState);\n","export const UPDATE_SEARCH_COUNTER = 'UPDATE_SEARCH_COUNTER';\nexport const UPDATE_PLAY_COUNTER = 'UPDATE_PLAY_COUNTER';\n","import { SIGN_IN, LOGOUT } from './types';\nimport F from '../../utils/func';\n\nconst localUser = JSON.parse(localStorage.getItem('user')) || null;\n\nconst initialState = {\n  userName: localUser ? localUser.name : ''\n};\n\nconst handleReducer = {\n  [SIGN_IN]: (state, { payload }) => ({\n    ...state,\n    userName: payload\n  }),\n  [LOGOUT]: (state) => ({\n    ...state\n  })\n};\n\nexport default F.createReducer(handleReducer, initialState);\n","export const SIGN_IN = 'SIGN IN';\nexport const LOGOUT = 'LOGOUT';\n","import { combineReducers } from 'redux';\nimport sidebarReducer from './sidebar/reducer';\nimport notesReducer from './notes/reducer';\nimport musicReducer from './music/reducer';\nimport analyticsReducer from './analytics/reducer';\nimport loginReducer from './login/reducer';\n\nexport default combineReducers({\n  sidebarReducer,\n  notesReducer,\n  musicReducer,\n  analyticsReducer,\n  loginReducer\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const text = {\n  appName: 'My iTunes',\n  musicHeadline: 'iTunes Music',\n  favoritesHeadline: 'Favorites',\n  modalApply: 'Apply',\n  modalCancel: 'Cancel',\n  modalAdd: 'Add',\n  modalSave: 'Save',\n  buttonDelete: 'Delete',\n  buttonChange: 'Change',\n  buttonSearch: 'Search',\n  buttonSignIn: 'Sign In',\n  buttonCancel: 'Cancel',\n  buttonPlaySong: 'Play preview of song',\n  placeholderForGenderSelect: 'Select a gender',\n  placeholderForSearchMusic: 'Enter artist',\n  placeholderForUserInput: 'Enter your name',\n  placeholderForEmailInput: 'Enter your email',\n  placeholderForPasswordInput: 'Enter your password',\n  genderMale: 'male',\n  genderFemale: 'female',\n  imgAlt: 'Artist',\n  xTitle: 'Artist',\n  queriesTitle: 'Count of search queries',\n  playingTitle: 'Count of playing',\n  closeFavorites: 'Go to my Favorites',\n  openFavorites: 'My Favorites',\n  searchAnalytics: 'Search Analytics',\n  playAnalytics: 'Play Analytics'\n};\n\nexport default text;\n","import React from 'react';\nimport { VerticalBarSeries, XAxis, XYPlot, YAxis } from 'react-vis';\nimport PropTypes from 'prop-types';\nimport text from '../../constants/text';\n\nconst Chart = ({ data, yTitle, headline }) => (\n  <div className=\"search_analytics\">\n    <h3>{headline}</h3>\n    <XYPlot\n      height={300}\n      width={400}\n      xType=\"ordinal\"\n    >\n      <VerticalBarSeries data={data} />\n      <XAxis title={text.xTitle} />\n      <YAxis title={yTitle} />\n    </XYPlot>\n  </div>\n);\n\nChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  yTitle: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired\n};\n\nexport default Chart;\n","import { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => ({\n  artists: state.analyticsReducer.artists\n});\n\nexport default connect(mapStateToProps, null);\n","import React from 'react';\nimport * as R from 'ramda';\nimport PropTypes from 'prop-types';\nimport Chart from './Chart';\nimport connect from './connect';\nimport text from '../../constants/text';\nimport './Analytics.css';\n\nconst Analytics = ({ artists }) => {\n  const createData = (counterName) => R.pipe(\n    R.values,\n    R.map((it) => ({\n      x: it.artistName,\n      y: it[counterName] || 0\n    })),\n    R.filter((it) => it.y)\n  )(artists);\n\n  const searchData = createData('searchCounter');\n  const playData = createData('playCounter');\n  const showSearchChart = Boolean(searchData.length);\n  const showPlayedChart = Boolean(playData.length);\n  return (\n    <div className=\"wrapper\">\n      <h1>Analytics</h1>\n      <div className=\"analytics\">\n        {showSearchChart\n        && (\n          <Chart\n            data={searchData}\n            yTitle={text.queriesTitle}\n            headline={text.searchAnalytics}\n          />\n        )}\n\n        {showPlayedChart\n        && (\n          <Chart\n            data={playData}\n            yTitle={text.playingTitle}\n            headline={text.playAnalytics}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nAnalytics.propTypes = {\n  artists: PropTypes.shape({\n    artistName: PropTypes.string,\n    searchCounter: PropTypes.number,\n    playCounter: PropTypes.number\n  }).isRequired\n};\n\nexport default connect(Analytics);\n","const utils = {\n  sidebarItems: [\n    {\n      title: 'Musicians',\n      path: '/home/musicians',\n      iconType: 'crown'\n    },\n    {\n      title: 'Analytics',\n      path: '/home/analytics',\n      iconType: 'line-chart'\n    },\n    {\n      title: 'Notes',\n      path: '/home/notes',\n      iconType: 'form'\n    },\n    {\n      title: 'Music',\n      path: '/home/music',\n      iconType: 'customer-service'\n    }\n  ],\n  userTableColumns: ['Name', 'Age', 'Gender', 'Region'],\n  types: {\n    title: 'title',\n    date: 'date',\n    text: 'text'\n  },\n  musicians: [\n    {\n      name: 'Beyonce',\n      age: 38,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Katy Perry',\n      age: 34,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Rihanna',\n      age: 31,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Madonna',\n      age: 61,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Sia',\n      age: 43,\n      gender: 'female',\n      region: 'Australia'\n    },\n    {\n      name: 'Lady GaGa',\n      age: 33,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Lana Del Ray',\n      age: 34,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Justin Timberlake',\n      age: 38,\n      gender: 'male',\n      region: 'USA'\n    },\n    {\n      name: 'Chris Brown',\n      age: 30,\n      gender: 'male',\n      region: 'USA'\n    },\n    {\n      name: 'Justin Bieber',\n      age: 25,\n      gender: 'male',\n      region: 'Canada'\n    },\n    {\n      name: 'Ed Sheeran',\n      age: 28,\n      gender: 'male',\n      region: 'Great Britain'\n    },\n    {\n      name: 'Hozier',\n      age: 29,\n      gender: 'male',\n      region: 'Ireland'\n    },\n    {\n      name: 'Whitney Houston',\n      age: 48,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Cardi B',\n      age: 26,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Billie Eilish',\n      age: 17,\n      gender: 'female',\n      region: 'USA'\n    },\n    {\n      name: 'Martin Garrix',\n      age: 23,\n      gender: 'male',\n      region: 'Netherlands'\n    },\n    {\n      name: '6lack',\n      age: 27,\n      gender: 'male',\n      region: 'USA'\n    },\n    {\n      name: 'Drake',\n      age: 32,\n      gender: 'male',\n      region: 'Canada'\n    },\n    {\n      name: 'Kanye West',\n      age: 42,\n      gender: 'male',\n      region: 'USA'\n    },\n    {\n      name: 'Bones',\n      age: 25,\n      gender: 'male',\n      region: 'USA'\n    },\n    {\n      name: 'Post Malone',\n      age: 24,\n      gender: 'male',\n      region: 'USA' }\n  ]\n};\n\nexport default utils;\n","import React from 'react';\nimport { Button, Icon } from 'antd/es';\nimport * as R from 'ramda';\nimport PropTypes from 'prop-types';\nimport utils from '../../constants/utils';\nimport text from '../../constants/text';\nimport './Musicians.css';\n\nconst Musicians = ({ history }) => {\n  const makeCell = (it, index) => <td key={`${index}${it}`}>{it}</td>;\n\n  const searchSongs = (term) => () => {\n    history.push('/home/music', { term });\n  };\n\n  const makeLine = (it, index) => (\n    <tr key={`${it.name}${index}`}>\n      { R.map(makeCell, R.values(it)) }\n      <td>\n        <Button onClick={searchSongs(it.name)}>\n          { text.buttonSearch }\n          <Icon type=\"apple\" />\n        </Button>\n      </td>\n    </tr>\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Musicians</h1>\n      <table>\n        <thead>\n          <tr>\n            { R.map(makeCell, utils.userTableColumns) }\n          </tr>\n        </thead>\n        { R.map(makeLine, utils.musicians) }\n      </table>\n    </div>\n  );\n};\n\nMusicians.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default Musicians;\n","import { ADD_NOTE, UPDATE_NOTE } from './types';\n\nexport const addNote = (currentNote) => ({\n  type: ADD_NOTE,\n  payload: currentNote\n});\n\nexport const updateNote = (updateNotes) => ({\n  type: UPDATE_NOTE,\n  payload: updateNotes\n});\n","import * as R from 'ramda';\nimport generateId from 'nanoid';\nimport * as action from '../../redux/notes/actions';\n\nexport const addNote = (note) => (dispatch) => {\n  const noteWithId = { ...note, id: generateId() };\n  const notes = R.pipe(\n    (key) => localStorage.getItem(key),\n    R.defaultTo('[]'),\n    JSON.parse\n  )('notes');\n  const allNotes = [...notes, noteWithId];\n  localStorage.setItem('notes', JSON.stringify(allNotes));\n  dispatch(action.addNote(noteWithId));\n};\n\nexport const deleteNote = (id) => (dispatch, getState) => {\n  const { notes } = getState().notesReducer;\n  const isAnotherId = (it) => it.id !== id;\n  const updateNotes = R.filter(isAnotherId, notes);\n  localStorage.setItem('notes', JSON.stringify(updateNotes));\n  dispatch(action.updateNote(updateNotes));\n};\n\nexport const updateNoteById = (id, newValue, type) => (dispatch, getState) => {\n  const { notes } = getState().notesReducer;\n  const updateNotes = R.map((it) => {\n    if (it.id !== id) return it;\n    return {\n      ...it,\n      [type]: newValue\n    };\n  }, notes);\n  localStorage.setItem('notes', JSON.stringify(updateNotes));\n  dispatch(action.updateNote(updateNotes));\n};\n","import { connect } from 'react-redux';\nimport { addNote, deleteNote, updateNoteById } from './helpers';\n\nconst mapStateToProps = (state) => ({\n  notes: state.notesReducer.notes\n});\n\nconst mapDispatchToProps = {\n  addNote,\n  deleteNote,\n  updateNoteById\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n","import React from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { EditContainer } from '../index';\nimport connect from '../../connect';\nimport utils from '../../../../constants/utils';\nimport buttonText from '../../../../constants/text';\nimport './Note.scss';\n\nclass Note extends React.Component {\n    state = {\n      type: null,\n      value: ''\n    };\n\n    onEdit = (type, value) => () => {\n      this.setState({\n        type,\n        value\n      });\n    };\n\n    onChange = ({ target: { value } }) => {\n      this.setState({\n        value\n      });\n    };\n\n    onUpdate = () => {\n      const { type, value } = this.state;\n      const { id, updateNoteById } = this.props;\n      updateNoteById(id, value, type);\n      this.setState({\n        value: '',\n        type: null\n      });\n    };\n\n    deleteNote = () => {\n      const { id, deleteNote } = this.props;\n      deleteNote(id);\n    };\n\n    render() {\n      const { type, value } = this.state;\n      const { title, date, text } = this.props;\n\n      return (\n        <div className=\"note\">\n          <header>\n            <div className=\"note-info\">\n              <EditContainer\n                type={type}\n                containerType={utils.types.title}\n                value={value}\n                onChange={this.onChange}\n                onUpdate={this.onUpdate}\n                text={title}\n                onEdit={this.onEdit}\n              />\n              <EditContainer\n                type={type}\n                containerType={utils.types.date}\n                value={value}\n                onChange={this.onChange}\n                onUpdate={this.onUpdate}\n                text={date}\n                onEdit={this.onEdit}\n              />\n            </div>\n            <Button type=\"primary\" onClick={this.deleteNote}>\n              {buttonText.buttonDelete}\n            </Button>\n          </header>\n\n          <EditContainer\n            type={type}\n            containerType={utils.types.text}\n            value={value}\n            onChange={this.onChange}\n            onUpdate={this.onUpdate}\n            text={text}\n            onEdit={this.onEdit}\n          />\n        </div>\n      );\n    }\n}\n\nNote.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  updateNoteById: PropTypes.func.isRequired,\n  deleteNote: PropTypes.func.isRequired\n};\n\nexport default connect(Note);\n","import React from 'react';\nimport { Icon, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport './EditContainer.scss';\n\nconst EditContainer = ({ type, containerType, value, onChange, onUpdate, onEdit, text }) => {\n  const isSameType = type === containerType;\n\n  return (\n    <div className=\"edit-container\">\n      {\n                isSameType\n                  ? (\n                    <Input\n                      type=\"text\"\n                      name={containerType}\n                      value={value}\n                      onChange={onChange}\n                    />\n                  )\n                  : <p>{text}</p>\n            }\n      {\n        <Icon\n          type={isSameType ? 'check-circle' : 'edit'}\n          onClick={isSameType ? onUpdate : onEdit(containerType, text)}\n          className={isSameType ? 'save' : 'edit'}\n        />\n            }\n    </div>\n  );\n};\n\nEditContainer.propTypes = {\n  type: PropTypes.string.isRequired,\n  containerType: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default EditContainer;\n","import React, { Component } from 'react';\nimport { Button, Input, Modal } from 'antd/es';\nimport * as R from 'ramda';\nimport connect from './connect';\nimport { Note } from './components';\nimport text from '../../constants/text';\nimport './Notes.css';\n\nclass Notes extends Component {\n    state = {\n      visible: false,\n      currentNote: {}\n    };\n\n    showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    handleCancel = () => {\n      this.setState({\n        visible: false,\n      });\n    };\n\n    handleAdd = () => {\n      const { currentNote } = this.state;\n      const { addNote } = this.props;\n      addNote(currentNote);\n      this.setState({\n        visible: false,\n        currentNote: {}\n      });\n    };\n\n    onChange = ({ target }) => {\n      const { name, value } = target;\n      const { currentNote } = this.state;\n      this.setState({\n        currentNote: {\n          ...currentNote,\n          [name]: value\n        }\n      });\n    };\n\n    render() {\n      const { visible, currentNote } = this.state;\n      const { notes } = this.props;\n      return (\n        <div className=\"wrapper\">\n          <h1>Notes</h1>\n          <Button onClick={this.showModal} type=\"primary\">\n                    Add note\n          </Button>\n          <Modal\n            title=\"Add Note\"\n            visible={visible}\n            onCancel={this.handleCancel}\n            footer={[\n              <Button type=\"back\" onClick={this.handleCancel}>\n                {text.modalCancel}\n              </Button>,\n              <Button type=\"primary\" onClick={this.handleAdd}>\n                {text.modalAdd}\n              </Button>\n            ]}\n          >\n            <Input\n              placeholder=\"Title\"\n              name=\"title\"\n              onChange={this.onChange}\n              value={currentNote.title}\n            />\n            <Input\n              placeholder=\"Date in format MM.DD.YYYY\"\n              name=\"date\"\n              onChange={this.onChange}\n              value={currentNote.date}\n            />\n            <Input.TextArea\n              placeholder=\"Your note...\"\n              name=\"text\"\n              onChange={this.onChange}\n              value={currentNote.text}\n            />\n          </Modal>\n          <div className=\"notes\">\n            {\n                        R.map((note) => (\n                          <Note\n                            key={note.id}\n                            id={note.id}\n                            title={note.title}\n                            date={note.date}\n                            text={note.text}\n                          />\n                        ),\n                        notes)\n                    }\n          </div>\n\n        </div>\n      );\n    }\n}\n\nexport default connect(Notes);\n","import { UPDATE_SEARCH_COUNTER, UPDATE_PLAY_COUNTER } from './types';\n\nexport const updateSearchCounter = (artist) => ({\n  type: UPDATE_SEARCH_COUNTER,\n  payload: artist\n});\n\nexport const updatePlayCounter = (artist) => ({\n  type: UPDATE_PLAY_COUNTER,\n  payload: artist\n});\n","import Axios from 'axios';\n\nconst axios = {\n  axiosForMusic: Axios.create({\n    baseURL: 'https://itunes.apple.com/search?',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    responseType: 'json'\n  })\n};\n\nexport default axios;\n","import axios from '../axios';\n\nconst api = {\n  getMusic: (params) => axios.axiosForMusic.get('', { params })\n};\n\nexport default api;\n","import * as R from 'ramda';\nimport * as action from '../../redux/music/actions';\nimport * as analyticsActions from '../../redux/analytics/actions';\nimport api from '../../methods/api';\n\nexport const getMusic = (params) => async (dispatch, getState) => {\n  const { data: { results } } = await api.getMusic(params);\n  if (results.length) {\n    const { artistName } = R.pipe(\n      R.filter((track) => R.indexOf('&', track.artistName) === -1),\n      R.head,\n    )(results);\n    const artist = getState().analyticsReducer.artists[artistName] || {};\n    dispatch(analyticsActions.updateSearchCounter({\n      ...artist,\n      artistName,\n      searchCounter: artist.searchCounter ? artist.searchCounter + 1 : 1\n    }));\n  }\n  dispatch(action.getMusic(results));\n};\n\nexport const countPlaying = (name) => (dispatch, getState) => {\n  const artistName = R.indexOf('&', name) === -1 ? name : R.split(' & ', name)[0];\n  const artist = getState().analyticsReducer.artists[artistName] || {};\n  dispatch(analyticsActions.updatePlayCounter({\n    ...artist,\n    artistName,\n    playCounter: artist.playCounter ? artist.playCounter + 1 : 1\n  }));\n};\n\nexport const addSongToFav = (song) => (dispatch) => {\n  const favSongs = R.pipe(\n    (key) => localStorage.getItem(key),\n    R.defaultTo('{}'),\n    JSON.parse\n  )('favoriteSongs');\n  if (!R.has(song.trackId, favSongs)) favSongs[song.trackId] = song;\n  localStorage.setItem('favoriteSongs', JSON.stringify(favSongs));\n  dispatch(action.addSongToFavorite(song));\n};\n\nexport const deleteFromFav = (id) => (dispatch) => {\n  const favSongs = R.pipe(\n    (key) => localStorage.getItem(key),\n    R.defaultTo('{}'),\n    JSON.parse\n  )('favoriteSongs');\n  delete favSongs[id];\n  localStorage.setItem('favoriteSongs', JSON.stringify(favSongs));\n  dispatch(action.updateFavoriteSongs(favSongs));\n};\n","import { connect } from 'react-redux';\nimport { getMusic, countPlaying, addSongToFav, deleteFromFav } from './helpers';\n\nconst mapStateToProps = (state) => ({\n  songs: state.musicReducer.songs\n});\n\nconst mapDispatchToProps = {\n  getMusic,\n  countPlaying,\n  addSongToFav,\n  deleteFromFav\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n","import { GET_MUSIC, ADD_SONG_TO_FAVORITE, UPDATE_FAVORITE_SONGS } from './types';\r\n\r\nexport const getMusic = (songs) => ({\r\n  type: GET_MUSIC,\r\n  payload: songs\r\n});\r\n\r\nexport const addSongToFavorite = (song) => ({\r\n  type: ADD_SONG_TO_FAVORITE,\r\n  payload: song\r\n});\r\n\r\nexport const updateFavoriteSongs = (songs) => ({\r\n  type: UPDATE_FAVORITE_SONGS,\r\n  payload: songs\r\n});\r\n","import React from 'react';\nimport { Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport text from '../../constants/text';\nimport './Header.css';\n\nconst Header = ({ userName, logout }) => (\n  <header>\n    <h1 className=\"headline\">\n      {text.appName}\n      <Icon type=\"apple\" theme=\"filled\" />\n    </h1>\n    <p>\n      {userName}\n      <Icon type=\"logout\" onClick={logout} />\n    </p>\n  </header>\n);\n\nHeader.propTypes = {\n  userName: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import { connect } from 'react-redux';\nimport { toggleStateSideBar } from '../../redux/sidebar/actions';\n\nconst mapStateToProps = (state) => ({\n  isOpen: state.sidebarReducer.isOpen\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleState: () => dispatch(toggleStateSideBar())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n","import { TOGGLE_STATE } from './types';\n\nexport const toggleStateSideBar = () => ({\n  type: TOGGLE_STATE\n});\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd/es';\nimport * as R from 'ramda';\nimport utils from '../../constants/utils';\nimport connect from './connect';\nimport './Sidebar.css';\n\nclass Sidebar extends Component {\n    renderList = (isOpen) => (\n      R.map((it) => (\n        <NavLink to={it.path} key={it.title} activeClassName=\"active-link\" className=\"link\">\n          <Icon type={it.iconType} />\n          {isOpen && it.title}\n        </NavLink>\n      ), utils.sidebarItems)\n    );\n\n    render() {\n      const { isOpen, toggleState } = this.props;\n      return (\n        <aside className={`nav_bar ${isOpen ? 'open' : 'close'}`}>\n          <ul>\n            {this.renderList(isOpen)}\n          </ul>\n          <button type=\"submit\" onClick={toggleState}>\n            <Icon type={isOpen ? 'double-left' : 'double-right'} />\n            {isOpen && 'Collapse Sidebar' }\n          </button>\n        </aside>\n      );\n    }\n}\n\nSidebar.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggleState: PropTypes.func.isRequired\n};\n\nexport default connect(Sidebar);\n","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport { Button, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport F from '../../utils/func';\nimport './Player.css';\n\nclass Player extends React.Component {\n    state = {\n      progress: 0,\n      playedSeconds: 0,\n    };\n\n    changeProgress = ({ played, playedSeconds }) => {\n      this.setState({\n        progress: played,\n        playedSeconds\n      });\n    };\n\n    render() {\n      const { url, track, play, onPlay, onStop } = this.props;\n      const { playedSeconds, progress } = this.state;\n\n      return (\n        <div className=\"player_wrapper\">\n          <ReactPlayer\n            url={url}\n            playing={play}\n            fileConfig={{ forceAudio: true }}\n            onProgress={this.changeProgress}\n          />\n          <div className=\"player\">\n            <Button type=\"primary\" onClick={play ? onStop : onPlay} id={track}>\n              <Icon type={play ? 'pause' : 'caret-right'} />\n            </Button>\n            <span>{`0:${F.createCorrectDurationPart(Math.round(playedSeconds))} / 0:30`}</span>\n            <div className=\"progress_bar\">\n              <span style={{ width: `${progress * 100}%` }} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\nPlayer.propTypes = {\n  url: PropTypes.string.isRequired,\n  track: PropTypes.number.isRequired,\n  play: PropTypes.bool.isRequired,\n  onPlay: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired\n};\n\nexport default Player;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport * as R from 'ramda';\nimport { Avatar } from '../index';\nimport Player from '../Player/Player';\nimport F from '../../utils/func';\nimport './Card.css';\n\n\nclass Card extends React.Component {\n    state = {\n      isFav: R.path(['item', 'isFavorite'], this.props)\n    };\n\n    addToFavorite = (song) => () => {\n      const { addSongToFav } = this.props;\n      this.setState({\n        isFav: true\n      });\n      addSongToFav(song);\n    };\n\n    deleteFromFavorite = (id) => () => {\n      const { deleteFromFav } = this.props;\n      this.setState({\n        isFav: false\n      });\n      deleteFromFav(id);\n    };\n\n    render() {\n      const { item, play, onPlay, onStop } = this.props;\n      const {\n        artworkUrl100,\n        artistName,\n        trackName,\n        collectionName,\n        country,\n        releaseDate,\n        trackTimeMillis,\n        previewUrl,\n        trackId\n      } = item;\n      const { isFav } = this.state;\n\n      return (\n        <div className=\"card\">\n          <div className=\"info\">\n            <Avatar url={artworkUrl100} />\n            <div className=\"text\">\n              <h2>{`${F.parseName(artistName)} - ${F.parseName(trackName)}`}</h2>\n              <p>{`Album: ${F.parseName(collectionName)}`}</p>\n              <p>{`Country: ${country}`}</p>\n              <p>{`Date: ${F.parseDateRelease(releaseDate)}`}</p>\n              <p>{`Duration: ${F.parseDuration(trackTimeMillis)}`}</p>\n            </div>\n            <Icon\n              type=\"heart\"\n              onClick={isFav ? this.deleteFromFavorite(trackId) : this.addToFavorite(item)}\n              theme={isFav ? 'filled' : ''}\n            />\n          </div>\n          <Player\n            url={previewUrl}\n            track={trackId}\n            play={play}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n        </div>\n      );\n    }\n}\n\nCard.propTypes = {\n  item: PropTypes.shape({\n    artworkUrl100: PropTypes.string.isRequired,\n    artistName: PropTypes.string.isRequired,\n    trackName: PropTypes.string.isRequired,\n    collectionName: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    trackTimeMillis: PropTypes.number.isRequired,\n    previewUrl: PropTypes.string.isRequired,\n    trackId: PropTypes.number.isRequired,\n    isFavorite: PropTypes.bool.isRequired\n  }).isRequired,\n  play: PropTypes.bool.isRequired,\n  onPlay: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport text from '../../constants/text';\nimport './Avatar.css';\n\nconst Avatar = ({ url }) => (\n  <img src={url} alt={text.imgAlt} />\n);\n\nAvatar.propTypes = {\n  url: PropTypes.string.isRequired\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { Input, Spin, Button } from 'antd';\nimport * as R from 'ramda';\nimport PropTypes from 'prop-types';\nimport connect from './connect';\nimport { Card } from '../../components';\nimport text from '../../constants/text';\nimport './Music.css';\n\nclass Music extends Component {\n  state = {\n    params: {\n      term: null,\n      entity: 'song'\n    },\n    loading: false,\n    playing: false,\n    trackId: '',\n    isOpenFavorites: false,\n    isError: false\n  };\n\n  componentDidMount() {\n    const { location: { state } } = this.props;\n    if (state) this.onSearch(state.term);\n  }\n\n  onPlay = (trackId, name) => () => {\n    const { countPlaying } = this.props;\n    this.setState({\n      playing: true,\n      trackId\n    });\n    countPlaying(name);\n  };\n\n  onStop = () => {\n    this.setState({\n      playing: false\n    });\n  };\n\n  onSearch = (value) => {\n    const { params } = this.state;\n    this.setState({\n      params: {\n        ...params,\n        term: value\n      },\n      isOpenFavorites: false,\n      isError: false\n    }, () => {\n      this.getSongs()\n        .catch(this.setError);\n    });\n  };\n\n  setError = () => {\n    this.setState({\n      isError: true\n    });\n  };\n\n  getSongs = async () => {\n    const { params } = this.state;\n    const { getMusic } = this.props;\n    this.setState({\n      loading: true\n    });\n    await getMusic(params);\n    this.setState({\n      loading: false\n    });\n  };\n\n  onChange = ({ target: { value } }) => {\n    const { params } = this.state;\n    this.setState({\n      params: {\n        ...params,\n        term: value\n      }\n    });\n  };\n\n  showFavorites = () => {\n    this.setState({\n      isOpenFavorites: true\n    });\n  };\n\n  renderSongs = () => {\n    const { songs, addSongToFav, deleteFromFav } = this.props;\n    const favSongs = JSON.parse(localStorage.getItem('favoriteSongs')) || {};\n    const { playing, trackId, isOpenFavorites } = this.state;\n    return (\n      R.map((it) => (\n        <Card\n          item={{\n            ...it,\n            isFavorite: R.has(it.trackId, favSongs)\n          }}\n          play={playing && it.trackId === trackId}\n          key={it.trackId}\n          onPlay={this.onPlay(it.trackId, it.artistName)}\n          onStop={this.onStop}\n          addSongToFav={addSongToFav}\n          deleteFromFav={deleteFromFav}\n        />\n      ), isOpenFavorites ? R.values(favSongs) : songs)\n    );\n  };\n\n  render() {\n    const { loading, params: { term }, isOpenFavorites, isError } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <Spin spinning={loading && !isError}>\n          <h1>{isOpenFavorites ? text.favoritesHeadline : text.musicHeadline}</h1>\n          <div className=\"filters\">\n            <Input.Search\n              placeholder={text.placeholderForSearchMusic}\n              enterButton={text.buttonSearch}\n              onSearch={this.onSearch}\n              value={term}\n              onChange={this.onChange}\n            />\n            <Button\n              type={isOpenFavorites ? 'default' : 'primary'}\n              onClick={this.showFavorites}\n            >\n              {isOpenFavorites ? text.openFavorites : text.closeFavorites}\n            </Button>\n          </div>\n\n          {\n            isError\n              ? <p className=\"error_feedback\">Sorry, network error. Please try again.</p>\n              : <div className=\"cards\">{this.renderSongs()}</div>\n          }\n        </Spin>\n      </div>\n    );\n  }\n}\n\nMusic.propTypes = {\n  countPlaying: PropTypes.func.isRequired,\n  getMusic: PropTypes.func.isRequired,\n  songs: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default connect(Music);\n","import * as action from '../../redux/login/actions';\n\nexport const signIn = (name, email, password) => (dispatch) => {\n  localStorage.setItem('user', JSON.stringify({\n    name,\n    email,\n    password\n  }));\n  dispatch(action.signIn(name));\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch(action.logout());\n};\n","import { SIGN_IN, LOGOUT } from './types';\n\nexport const signIn = (name) => ({\n  type: SIGN_IN,\n  payload: name\n});\n\nexport const logout = () => ({\n  type: LOGOUT\n});\n","import { connect } from 'react-redux';\nimport { signIn } from './helpers';\n\n\nconst mapStateToProps = (state) => ({\n  userName: state.loginReducer.userName\n});\n\nconst mapDispatchToProps = {\n  signIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport connect from './connect';\nimport text from '../../constants/text';\nimport './Login.scss';\n\nclass Login extends React.Component {\n    state = {\n      userName: null,\n      email: null,\n      password: null\n    };\n\n    onChange = ({ target: { name, value } }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    handleCancel = () => {\n      this.setState({\n        userName: null,\n        email: null,\n        password: null\n      });\n    };\n\n    signIn = () => {\n      const { userName, email, password } = this.state;\n      const { signIn, history } = this.props;\n      signIn(userName, email, password);\n      history.push('/home/musicians');\n    };\n\n    render() {\n      const { userName, email, password } = this.state;\n\n      return (\n        <div className=\"wrapper login\">\n          <h1>Sign in</h1>\n          <div className=\"sign_in\">\n            <Input\n              placeholder={text.placeholderForUserInput}\n              value={userName}\n              name=\"userName\"\n              onChange={this.onChange}\n            />\n            <Input\n              placeholder={text.placeholderForEmailInput}\n              value={email}\n              name=\"email\"\n              onChange={this.onChange}\n            />\n            <Input.Password\n              placeholder={text.placeholderForPasswordInput}\n              value={password}\n              name=\"password\"\n              onChange={this.onChange}\n            />\n            <div className=\"sign_in_actions\">\n              <Button onClick={this.handleCancel}>\n                {text.buttonCancel}\n              </Button>\n              <Button type=\"primary\" onClick={this.signIn}>\n                {text.buttonSignIn}\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\nLogin.propTypes = {\n  signIn: PropTypes.func.isRequired\n};\n\nexport default connect(Login);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst withAuthorizationUser = (Component) => {\n  class WithAuthorizationUser extends React.Component {\n        state = {\n          userName: localStorage.user ? JSON.parse(localStorage.user).name : null\n        };\n\n        logout = () => {\n          const { logout } = this.props;\n          this.setState({\n            userName: null\n          }, () => {\n            localStorage.removeItem('user');\n            logout();\n          });\n        };\n\n        render() {\n          const { userName } = this.state;\n\n          if (!userName) {\n            return <Redirect to=\"/login\" />;\n          }\n\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          return <Component {...this.props} userName={userName} logout={this.logout} />;\n        }\n  }\n\n  return WithAuthorizationUser;\n};\n\nexport default withAuthorizationUser;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withAuthorizationUser from './hocs/withAuthorizationUser';\nimport { signIn, logout } from './pages/Login/helpers';\n\nconst mapStateToProps = (state) => ({\n  userName: state.loginReducer.userName\n});\n\nconst mapDispatchToProps = {\n  signIn,\n  logout\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthorizationUser);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Header, Sidebar } from './components';\nimport { Analytics, Music, Musicians, Notes } from './pages';\nimport connect from './connect';\n\nconst Navigation = ({ userName, logout }) => (\n  <>\n    <Header userName={userName} logout={logout} />\n    <main>\n      <Sidebar />\n      <Route path=\"/home/musicians\" exact component={Musicians} />\n      <Route path=\"/home/analytics\" exact component={Analytics} />\n      <Route path=\"/home/notes\" exact component={Notes} />\n      <Route path=\"/home/music\" exact component={Music} />\n    </main>\n  </>\n);\n\nNavigation.propTypes = {\n  userName: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nexport default connect(Navigation);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport * as R from 'ramda';\nimport { Login } from './pages';\nimport Navigation from './Navigation';\nimport 'antd/dist/antd.css';\nimport 'react-vis/dist/style.css';\nimport './App.css';\n\nconst App = () => {\n  const userName = R.pipe(\n    (it) => localStorage.getItem(it),\n    JSON.parse,\n    R.path(['name'])\n  )('user');\n\n  return (\n    <Router>\n      <Redirect exact from=\"/\" to=\"/login\" />\n      {userName && <Redirect exact from=\"/login\" to=\"/home\" />}\n      <Switch>\n        <Route path=\"/home\" component={Navigation} />\n        <Route path=\"/login\" component={Login} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst rootStore = createStore(store, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={rootStore}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}